trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '<service-connection-id>'
  imageRepository: 'pythonapp'
  containerRegistry: '<your-container-registry>.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'my-agent'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: 'my-agent'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: '<azure-subscription-id>'
        scriptType: 'bash'
        scriptLocation: 'inlineScript' 
        inlineScript: 'az acr login --name=$(containerRegistry)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: AzureCLI@2
      inputs:
        azureSubscription: '<azure-subscription-id>'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
                          az container create \
                          --name <container-name> \
                          --resource-group <resource-group-name> \
                          --image $(containerRegistry)/$(imageRepository):$(tag) \
                          --os-type Linux \
                          --ports 5000 \
                          --cpu 1 \
                          --memory 1.5 \
                          --registry-login-server $(containerRegistry) \
                          --registry-username <registry-username> \
                          --registry-password <registry-password> \
                          --dns-name-label <dns-name-label>
